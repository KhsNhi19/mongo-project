services:
  mongo1:
    image: mongo:6.0
    container_name: mongo1_project
    restart: always
    # Thêm --keyFile vào command
    command:
      [
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--keyFile",
        "/etc/secrets/mongo.key",
      ]
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_demo
      MONGO_INITDB_ROOT_PASSWORD: admin_123
    volumes:
      - mongo1-data:/data/db
      # Mount file key vào container
      - ./mongo.key:/etc/secrets/mongo.key:ro

  mongo2:
    image: mongo:6.0
    container_name: mongo2_project
    restart: always
    command:
      [
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--keyFile",
        "/etc/secrets/mongo.key",
      ]
    ports:
      - "27018:27017"
    volumes:
      - mongo2-data:/data/db
      - ./mongo.key:/etc/secrets/mongo.key:ro

  mongo3:
    image: mongo:6.0
    container_name: mongo3_project
    restart: always
    command:
      [
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--keyFile",
        "/etc/secrets/mongo.key",
      ]
    ports:
      - "27019:27017"
    volumes:
      - mongo3-data:/data/db
      - ./mongo.key:/etc/secrets/mongo.key:ro

  mongo-express:
    image: mongo-express:latest
    container_name: mongo_express_project
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo1,mongo2,mongo3
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo_demo
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin_123
      ME_CONFIG_MONGODB_RS_NAME: rs0
      ME_CONFIG_BASICAUTH_USERNAME: mongo_demo_web
      ME_CONFIG_BASICAUTH_PASSWORD: web_123
    depends_on:
      - mongo1
      - mongo2
      - mongo3

  backend:
    build: ./backend
    container_name: flask_app_project
    restart: always
    ports:
      - "5000:5000"
    environment:
      FLASK_APP: app.py
      FLASK_DEBUG: 1
      MONGO_URI: "mongodb://mongo_demo:admin_123@mongo1:27017,mongo2:27017,mongo3:27017/yelp_db?authSource=admin&replicaSet=rs0"
    volumes:
      - ./backend:/app
    depends_on:
      - mongo1
      - mongo2
      - mongo3

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_project
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - backend
      - node-exporter
      - mongodb-exporter

  grafana:
    image: grafana/grafana:latest
    container_name: grafana_project
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  k6:
    image: grafana/k6:latest
    container_name: k6_project
    restart: "no"
    volumes:
      - ./k6:/scripts
    command: run /scripts/test.js
    depends_on:
      - backend

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter_project
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($|/)"
    ports:
      - "9100:9100"

  mongodb-exporter:
    image: percona/mongodb_exporter:0.47.1
    container_name: mongo_exporter_project
    restart: always
    command:
      - --collect-all
      - --mongodb.uri=mongodb://exporter:exporter_123@mongo1:27017,mongo2:27017,mongo3:27017/admin?authSource=admin&replicaSet=rs0&directConnection=false
      - --mongodb.direct-connect=false
    ports:
      - "9216:9216"
    depends_on:
      - mongo1
      - mongo2
      - mongo3

volumes:
  mongo1-data:
    driver: local
  mongo2-data:
    driver: local
  mongo3-data:
    driver: local
